#!/bin/sh
#
# $FreeBSD$
#

EMBEDDEDBUILD=1
EMBEDDED_TARGET="arm"
EMBEDDED_TARGET_ARCH="armv6"
EMBEDDEDPORTS="sysutils/u-boot-rpi"
KERNEL="RPI-B"
WORLD_FLAGS="${WORLD_FLAGS} UBLDR_LOADADDR=0x2000000"
IMAGE_SIZE="1G"
PART_SCHEME="MBR"
FAT_SIZE="17m"
FAT_TYPE="16"
MD_ARGS="-x 63 -y 255"
NODOC=1

arm_install_uboot() {
	UBOOT_DIR="${CHROOTDIR}/usr/local/share/u-boot/u-boot-rpi"
	UBOOT_FILES="bootcode.bin config.txt fixup.dat fixup_cd.dat \
		start.elf start_cd.elf u-boot.img"
	FATMOUNT="${DESTDIR}/fat"
	UFSMOUNT="${DESTDIR}/ufs"
	chroot ${CHROOTDIR} mkdir -p "${FATMOUNT}" "${UFSMOUNT}"
	chroot ${CHROOTDIR} mount_msdosfs /dev/${mddev}s1 ${FATMOUNT}
	chroot ${CHROOTDIR} mount /dev/${mddev}s2a ${UFSMOUNT}
	for _UF in ${UBOOT_FILES}; do
		cp -p ${UBOOT_DIR}/${_UF} ${CHROOTDIR}/${FATMOUNT}/${_UF}
	done
	cp -p ${CHROOTDIR}/${UFSMOUNT}/boot/ubldr \
		${CHROOTDIR}/${FATMOUNT}/ubldr
	echo 'loadbootscript=fatload mmc 0 0x2000000 ubldr' > \
		${CHROOTDIR}/${FATMOUNT}/uenv.txt
	echo 'bootscript=fdt addr 0x100;bootelf 0x2000000' >> \
		${CHROOTDIR}/${FATMOUNT}/uenv.txt
	sync
	umount_loop ${CHROOTDIR}/${FATMOUNT}
	umount_loop ${CHROOTDIR}/${UFSMOUNT}
	rmdir ${CHROOTDIR}/${FATMOUNT}
	rmdir ${CHROOTDIR}/${UFSMOUNT}
	
	return 0
}
