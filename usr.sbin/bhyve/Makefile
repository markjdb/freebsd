#
# $FreeBSD$
#

.include <src.opts.mk>
CFLAGS+=-I${.CURDIR}/../../contrib/lib9p
CFLAGS+=-I${SRCTOP}/sys
.PATH:  ${SRCTOP}/sys/libkern ${SRCTOP}/sys/cam/ctl

PROG=	bhyve
PACKAGE=	bhyve

MAN=	bhyve.8 bhyve_config.5

BHYVE_SYSDIR?=${SRCTOP}

SRCS=	\
	acpi.c			\
	acpi_device.c		\
	audio.c			\
	basl.c			\
	bhyvegc.c		\
	bhyverun.c		\
	block_if.c		\
	bootrom.c		\
	config.c		\
	console.c		\
	crc16.c			\
	ctl_scsi_all.c		\
	ctl_util.c		\
	gdb.c			\
	hda_codec.c		\
	iov.c			\
	mem.c			\
	mevent.c		\
	net_backends.c		\
	net_utils.c		\
	pci_ahci.c		\
	pci_e82545.c		\
	pci_emul.c		\
	pci_hda.c		\
	pci_hostbridge.c	\
	pci_nvme.c		\
	pci_virtio_9p.c		\
	pci_virtio_block.c	\
	pci_virtio_console.c	\
	pci_virtio_input.c	\
	pci_virtio_net.c	\
	pci_virtio_rnd.c	\
	pci_virtio_scsi.c	\
	pci_xhci.c		\
	post.c			\
	qemu_fwcfg.c		\
	qemu_loader.c		\
	smbiostbl.c		\
	sockstream.c		\
	uart_backend.c		\
	usb_emul.c		\
	usb_mouse.c		\
	virtio.c		\
	vmgenc.c		\

.if ${MACHINE_CPUARCH} == "aarch64"
# Missing vm_get_ioctls
CFLAGS+=	-DWITHOUT_CAPSICUM
LIBFDTSRCDIR=	${SRCTOP}/sys/contrib/libfdt
CFLAGS+=	-I${LIBFDTSRCDIR}
LIBADD+=		fdt
SRCS+=	\
	bootcode.c		\
	fdt.c			\
	mmio_uart.c		\
	pl011.c
.endif

.if ${MACHINE_CPUARCH} == "amd64"
SRCS+=	\
	atkbdc.c		\
	e820.c			\
	fwctl.c			\
	inout.c			\
	ioapic.c		\
	kernemu_dev.c		\
	mptbl.c			\
	pci_fbuf.c		\
	pci_gvt-d.c		\
	pci_irq.c		\
	pci_lpc.c		\
	pci_passthru.c		\
	pci_uart.c		\
	pctestdev.c		\
	pm.c			\
	ps2kbd.c		\
	ps2mouse.c		\
	rfb.c			\
	rtc.c			\
	spinup_ap.c		\
	task_switch.c		\
	tpm_device.c		\
	tpm_emul_passthru.c	\
	tpm_intf_crb.c		\
	uart_emul.c		\
	vga.c			\
	xmsr.c

.endif

.if ${MK_BHYVE_SNAPSHOT} != "no"
SRCS+=	snapshot.c
.endif

CFLAGS.kernemu_dev.c+=	-I${SRCTOP}/sys/amd64

.PATH:  ${BHYVE_SYSDIR}/sys/${MACHINE}/vmm
SRCS+=	vmm_instruction_emul.c

LIBADD+=vmmapi md nv pthread z util sbuf cam 9p

.if ${MK_BHYVE_SNAPSHOT} != "no"
LIBADD+= ucl xo
.endif

.if ${MK_INET_SUPPORT} != "no"
CFLAGS+=-DINET
.endif
.if ${MK_INET6_SUPPORT} != "no"
CFLAGS+=-DINET6
.endif
.if ${MK_NETGRAPH_SUPPORT} != "no"
CFLAGS+=-DNETGRAPH
LIBADD+=    netgraph
.endif
.if ${MK_OPENSSL} == "no"
CFLAGS+=-DNO_OPENSSL
.else
LIBADD+=	crypto
CFLAGS+=-DOPENSSL_API_COMPAT=0x10100000L
.endif

CFLAGS+= -I${BHYVE_SYSDIR}/sys/dev/e1000
CFLAGS+= -I${BHYVE_SYSDIR}/sys/dev/mii
CFLAGS+= -I${BHYVE_SYSDIR}/sys/dev/usb/controller
.if ${MK_BHYVE_SNAPSHOT} != "no"
CFLAGS+= -I${SRCTOP}/contrib/libucl/include
CFLAGS+= -DBHYVE_SNAPSHOT
.endif

.ifdef GDB_LOG
CFLAGS+=-DGDB_LOG
.endif

# Disable thread safety analysis since it only finds very simple bugs and
# yields many false positives.
NO_WTHREAD_SAFETY=

NO_WCAST_ALIGN=

SUBDIR=	kbdlayout

.include <bsd.prog.mk>
